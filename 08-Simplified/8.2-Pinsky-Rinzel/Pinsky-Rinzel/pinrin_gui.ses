objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}

//Begin I/V Clamp Electrode
{
load_file("electrod.hoc")
}
{
ocbox_=new Electrode(0)
execute("can_locate=1 sec=\"rinzelnrn[0].soma\" xloc=0.5 locate(0)", ocbox_)
execute("vc.dur[0]=0.1 vc.amp[0]=-65", ocbox_)
execute("vc.dur[1]=2.5 vc.amp[1]=10", ocbox_)
execute("vc.dur[2]=100 vc.amp[2]=-65", ocbox_)
execute("stim.del=0.1 stim.dur=1000 stim.amp=0.0015", ocbox_)
execute("vcsteps=5", ocbox_)
execute("samp=stim.amp  store_vclamp() glyph()", ocbox_)
ocbox_ = ocbox_.v1
ocbox_.map("I/V Clamp Electrode", 1, 628, 265.92, 234.24)
}
objref ocbox_
//End I/V Clamp Electrode

{WindowMenu[0].ses_gid(1, 0, 1, "control-graphs")}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,-70,70)
scene_vector_[3] = save_window_
{save_window_.view(0, -70, 1000, 140, 296, 108, 759.36, 176.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.826549, 0.949002, 2)
save_window_.addexpr("onecell.dend.v( 0.5 )", 2, 1, 0.805057, 0.682214, 2)
save_window_.addexpr("onecell.soma.v( 0.5 )", 1, 1, 0.8, 0.9, 2)
}
{WindowMenu[0].ses_gid(0, 0, 1, "control-graphs")}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,0,380)
scene_vector_[4] = save_window_
{save_window_.view(0, 0, 1000, 380, 296, 638, 759.36, 229.12)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addvar("onecell.dend.cai( 0.5 )", 3, 1, 0.8, 0.9, 2)
}
{WindowMenu[0].ses_gid(0, 0, 1, "control-graphs")}
{
save_window_ = new Graph(0)
save_window_.size(0,1000,0,0.26)
scene_vector_[5] = save_window_
{save_window_.view(0, 0, 1000, 0.26, 296, 345, 759.36, 230.08)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("onecell.dend.m_rkq( 0.5 )", 1, 1, 0.8, 0.9, 2)
}
{WindowMenu[0].ses_gid(0, 0, 1, "control-graphs")}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 1000
xvalue("t","t", 2 )
tstop = 1000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.5
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(0,109)
}
{WindowMenu[0].ses_gid(0, 0, 1, "control-graphs")}
objectvar scene_vector_[1]
{doNotify()}
